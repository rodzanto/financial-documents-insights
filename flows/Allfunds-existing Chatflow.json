{
  "nodes": [
    {
      "width": 300,
      "height": 718,
      "id": "awsChatBedrock_0",
      "position": {
        "x": -773.4649045001817,
        "y": 332.1850347190831
      },
      "type": "customNode",
      "data": {
        "id": "awsChatBedrock_0",
        "label": "AWS Bedrock",
        "version": 2,
        "name": "awsChatBedrock",
        "type": "AWSChatBedrock",
        "baseClasses": [
          "AWSChatBedrock",
          "SimpleChatModel",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around AWS Bedrock large language models that use the Chat endpoint",
        "inputParams": [
          {
            "label": "AWS Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "awsApi"
            ],
            "optional": true,
            "id": "awsChatBedrock_0-input-credential-credential"
          },
          {
            "label": "Region",
            "name": "region",
            "type": "options",
            "options": [
              {
                "label": "af-south-1",
                "name": "af-south-1"
              },
              {
                "label": "ap-east-1",
                "name": "ap-east-1"
              },
              {
                "label": "ap-northeast-1",
                "name": "ap-northeast-1"
              },
              {
                "label": "ap-northeast-2",
                "name": "ap-northeast-2"
              },
              {
                "label": "ap-northeast-3",
                "name": "ap-northeast-3"
              },
              {
                "label": "ap-south-1",
                "name": "ap-south-1"
              },
              {
                "label": "ap-south-2",
                "name": "ap-south-2"
              },
              {
                "label": "ap-southeast-1",
                "name": "ap-southeast-1"
              },
              {
                "label": "ap-southeast-2",
                "name": "ap-southeast-2"
              },
              {
                "label": "ap-southeast-3",
                "name": "ap-southeast-3"
              },
              {
                "label": "ap-southeast-4",
                "name": "ap-southeast-4"
              },
              {
                "label": "ap-southeast-5",
                "name": "ap-southeast-5"
              },
              {
                "label": "ap-southeast-6",
                "name": "ap-southeast-6"
              },
              {
                "label": "ca-central-1",
                "name": "ca-central-1"
              },
              {
                "label": "ca-west-1",
                "name": "ca-west-1"
              },
              {
                "label": "cn-north-1",
                "name": "cn-north-1"
              },
              {
                "label": "cn-northwest-1",
                "name": "cn-northwest-1"
              },
              {
                "label": "eu-central-1",
                "name": "eu-central-1"
              },
              {
                "label": "eu-central-2",
                "name": "eu-central-2"
              },
              {
                "label": "eu-north-1",
                "name": "eu-north-1"
              },
              {
                "label": "eu-south-1",
                "name": "eu-south-1"
              },
              {
                "label": "eu-south-2",
                "name": "eu-south-2"
              },
              {
                "label": "eu-west-1",
                "name": "eu-west-1"
              },
              {
                "label": "eu-west-2",
                "name": "eu-west-2"
              },
              {
                "label": "eu-west-3",
                "name": "eu-west-3"
              },
              {
                "label": "il-central-1",
                "name": "il-central-1"
              },
              {
                "label": "me-central-1",
                "name": "me-central-1"
              },
              {
                "label": "me-south-1",
                "name": "me-south-1"
              },
              {
                "label": "sa-east-1",
                "name": "sa-east-1"
              },
              {
                "label": "us-east-1",
                "name": "us-east-1"
              },
              {
                "label": "us-east-2",
                "name": "us-east-2"
              },
              {
                "label": "us-gov-east-1",
                "name": "us-gov-east-1"
              },
              {
                "label": "us-gov-west-1",
                "name": "us-gov-west-1"
              },
              {
                "label": "us-west-1",
                "name": "us-west-1"
              },
              {
                "label": "us-west-2",
                "name": "us-west-2"
              }
            ],
            "default": "us-east-1",
            "id": "awsChatBedrock_0-input-region-options"
          },
          {
            "label": "Model Name",
            "name": "model",
            "type": "options",
            "options": [
              {
                "label": "anthropic.claude-instant-v1",
                "name": "anthropic.claude-instant-v1"
              },
              {
                "label": "anthropic.claude-v1",
                "name": "anthropic.claude-v1"
              },
              {
                "label": "anthropic.claude-v2",
                "name": "anthropic.claude-v2"
              }
            ],
            "default": "anthropic.claude-v2",
            "id": "awsChatBedrock_0-input-model-options"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "description": "Temperature parameter may not apply to certain model. Please check available model parameters",
            "optional": true,
            "default": 0.7,
            "id": "awsChatBedrock_0-input-temperature-number"
          },
          {
            "label": "Max Tokens to Sample",
            "name": "max_tokens_to_sample",
            "type": "number",
            "step": 10,
            "description": "Max Tokens parameter may not apply to certain model. Please check available model parameters",
            "optional": true,
            "default": 200,
            "id": "awsChatBedrock_0-input-max_tokens_to_sample-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "awsChatBedrock_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "region": "us-east-1",
          "model": "anthropic.claude-v2",
          "temperature": "0",
          "max_tokens_to_sample": "8000"
        },
        "outputAnchors": [
          {
            "id": "awsChatBedrock_0-output-awsChatBedrock-AWSChatBedrock|SimpleChatModel|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "awsChatBedrock",
            "label": "AWSChatBedrock",
            "type": "AWSChatBedrock | SimpleChatModel | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": -773.4649045001817,
        "y": 332.1850347190831
      }
    },
    {
      "width": 300,
      "height": 481,
      "id": "conversationalRetrievalQAChain_0",
      "position": {
        "x": 197.05588937548964,
        "y": 760.0149829721074
      },
      "type": "customNode",
      "data": {
        "id": "conversationalRetrievalQAChain_0",
        "label": "Conversational Retrieval QA Chain",
        "version": 1,
        "name": "conversationalRetrievalQAChain",
        "type": "ConversationalRetrievalQAChain",
        "baseClasses": [
          "ConversationalRetrievalQAChain",
          "BaseChain",
          "Runnable"
        ],
        "category": "Chains",
        "description": "Document QA - built on RetrievalQAChain to provide a chat history component",
        "inputParams": [
          {
            "label": "Return Source Documents",
            "name": "returnSourceDocuments",
            "type": "boolean",
            "optional": true,
            "id": "conversationalRetrievalQAChain_0-input-returnSourceDocuments-boolean"
          },
          {
            "label": "System Message",
            "name": "systemMessagePrompt",
            "type": "string",
            "rows": 4,
            "additionalParams": true,
            "optional": true,
            "placeholder": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\". You will provide me with answers from the given info. If the answer is not included, say exactly \"Hmm, I am not sure.\" and stop after that. Refuse to answer any question not about the info. Never break character.",
            "id": "conversationalRetrievalQAChain_0-input-systemMessagePrompt-string"
          },
          {
            "label": "Chain Option",
            "name": "chainOption",
            "type": "options",
            "options": [
              {
                "label": "MapReduceDocumentsChain",
                "name": "map_reduce",
                "description": "Suitable for QA tasks over larger documents and can run the preprocessing step in parallel, reducing the running time"
              },
              {
                "label": "RefineDocumentsChain",
                "name": "refine",
                "description": "Suitable for QA tasks over a large number of documents."
              },
              {
                "label": "StuffDocumentsChain",
                "name": "stuff",
                "description": "Suitable for QA tasks over a small number of documents."
              }
            ],
            "additionalParams": true,
            "optional": true,
            "id": "conversationalRetrievalQAChain_0-input-chainOption-options"
          }
        ],
        "inputAnchors": [
          {
            "label": "Language Model",
            "name": "model",
            "type": "BaseLanguageModel",
            "id": "conversationalRetrievalQAChain_0-input-model-BaseLanguageModel"
          },
          {
            "label": "Vector Store Retriever",
            "name": "vectorStoreRetriever",
            "type": "BaseRetriever",
            "id": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever"
          },
          {
            "label": "Memory",
            "name": "memory",
            "type": "BaseMemory",
            "optional": true,
            "description": "If left empty, a default BufferMemory will be used",
            "id": "conversationalRetrievalQAChain_0-input-memory-BaseMemory"
          }
        ],
        "inputs": {
          "model": "{{awsChatBedrock_0.data.instance}}",
          "vectorStoreRetriever": "{{pineconeExistingIndex_0.data.instance}}",
          "memory": "{{bufferWindowMemory_0.data.instance}}",
          "returnSourceDocuments": true,
          "systemMessagePrompt": "You are an assistant for answering questions about financial documents. Your name is Allfunds Assistant. You are being provided with a context formed by documents with an analysis of different funds, these are identified with an ISIN code similar to LU2337050632.\nAlways answer briefly and in the same language of the last interaction with the Human. If you don't know an answer just say Sorry, I don't have enough information for answering this.",
          "chainOption": "stuff"
        },
        "outputAnchors": [
          {
            "id": "conversationalRetrievalQAChain_0-output-conversationalRetrievalQAChain-ConversationalRetrievalQAChain|BaseChain|Runnable",
            "name": "conversationalRetrievalQAChain",
            "label": "ConversationalRetrievalQAChain",
            "type": "ConversationalRetrievalQAChain | BaseChain | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "positionAbsolute": {
        "x": 197.05588937548964,
        "y": 760.0149829721074
      },
      "dragging": false
    },
    {
      "width": 300,
      "height": 477,
      "id": "bufferWindowMemory_0",
      "position": {
        "x": -199.66383280309196,
        "y": 1029.3363301084364
      },
      "type": "customNode",
      "data": {
        "id": "bufferWindowMemory_0",
        "label": "Buffer Window Memory",
        "version": 1,
        "name": "bufferWindowMemory",
        "type": "BufferWindowMemory",
        "baseClasses": [
          "BufferWindowMemory",
          "BaseChatMemory",
          "BaseMemory"
        ],
        "category": "Memory",
        "description": "Uses a window of size k to surface the last k back-and-forths to use as memory",
        "inputParams": [
          {
            "label": "Memory Key",
            "name": "memoryKey",
            "type": "string",
            "default": "chat_history",
            "id": "bufferWindowMemory_0-input-memoryKey-string"
          },
          {
            "label": "Input Key",
            "name": "inputKey",
            "type": "string",
            "default": "input",
            "id": "bufferWindowMemory_0-input-inputKey-string"
          },
          {
            "label": "Size",
            "name": "k",
            "type": "number",
            "default": "4",
            "description": "Window of size k to surface the last k back-and-forths to use as memory.",
            "id": "bufferWindowMemory_0-input-k-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "memoryKey": "chat_history",
          "inputKey": "input",
          "k": "4"
        },
        "outputAnchors": [
          {
            "id": "bufferWindowMemory_0-output-bufferWindowMemory-BufferWindowMemory|BaseChatMemory|BaseMemory",
            "name": "bufferWindowMemory",
            "label": "BufferWindowMemory",
            "type": "BufferWindowMemory | BaseChatMemory | BaseMemory"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "positionAbsolute": {
        "x": -199.66383280309196,
        "y": 1029.3363301084364
      },
      "dragging": false
    },
    {
      "width": 300,
      "height": 506,
      "id": "pineconeExistingIndex_0",
      "position": {
        "x": -1148.9392707927027,
        "y": 719.6773600427726
      },
      "type": "customNode",
      "data": {
        "id": "pineconeExistingIndex_0",
        "label": "Pinecone Load Existing Index",
        "version": 1,
        "name": "pineconeExistingIndex",
        "type": "Pinecone",
        "baseClasses": [
          "Pinecone",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "Load existing index from Pinecone (i.e: Document has been upserted)",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "pineconeApi"
            ],
            "id": "pineconeExistingIndex_0-input-credential-credential"
          },
          {
            "label": "Pinecone Index",
            "name": "pineconeIndex",
            "type": "string",
            "id": "pineconeExistingIndex_0-input-pineconeIndex-string"
          },
          {
            "label": "Pinecone Namespace",
            "name": "pineconeNamespace",
            "type": "string",
            "placeholder": "my-first-namespace",
            "additionalParams": true,
            "optional": true,
            "id": "pineconeExistingIndex_0-input-pineconeNamespace-string"
          },
          {
            "label": "Pinecone Metadata Filter",
            "name": "pineconeMetadataFilter",
            "type": "json",
            "optional": true,
            "additionalParams": true,
            "id": "pineconeExistingIndex_0-input-pineconeMetadataFilter-json"
          },
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "additionalParams": true,
            "optional": true,
            "id": "pineconeExistingIndex_0-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "pineconeExistingIndex_0-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "embeddings": "{{huggingFaceInferenceEmbeddings_0.data.instance}}",
          "pineconeIndex": "allfunds",
          "pineconeNamespace": "",
          "pineconeMetadataFilter": "",
          "topK": ""
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "options": [
              {
                "id": "pineconeExistingIndex_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Pinecone Retriever",
                "type": "Pinecone | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "pineconeExistingIndex_0-output-vectorStore-Pinecone|VectorStore",
                "name": "vectorStore",
                "label": "Pinecone Vector Store",
                "type": "Pinecone | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "retriever"
        },
        "selected": false
      },
      "positionAbsolute": {
        "x": -1148.9392707927027,
        "y": 719.6773600427726
      },
      "selected": false,
      "dragging": false
    },
    {
      "width": 300,
      "height": 476,
      "id": "huggingFaceInferenceEmbeddings_0",
      "position": {
        "x": -1578.455844445211,
        "y": 782.0927239664345
      },
      "type": "customNode",
      "data": {
        "id": "huggingFaceInferenceEmbeddings_0",
        "label": "HuggingFace Inference Embeddings",
        "version": 1,
        "name": "huggingFaceInferenceEmbeddings",
        "type": "HuggingFaceInferenceEmbeddings",
        "baseClasses": [
          "HuggingFaceInferenceEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "HuggingFace Inference API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "huggingFaceApi"
            ],
            "id": "huggingFaceInferenceEmbeddings_0-input-credential-credential"
          },
          {
            "label": "Model",
            "name": "modelName",
            "type": "string",
            "description": "If using own inference endpoint, leave this blank",
            "placeholder": "sentence-transformers/distilbert-base-nli-mean-tokens",
            "optional": true,
            "id": "huggingFaceInferenceEmbeddings_0-input-modelName-string"
          },
          {
            "label": "Endpoint",
            "name": "endpoint",
            "type": "string",
            "placeholder": "https://xyz.eu-west-1.aws.endpoints.huggingface.cloud/sentence-transformers/all-MiniLM-L6-v2",
            "description": "Using your own inference endpoint",
            "optional": true,
            "id": "huggingFaceInferenceEmbeddings_0-input-endpoint-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "intfloat/multilingual-e5-large",
          "endpoint": ""
        },
        "outputAnchors": [
          {
            "id": "huggingFaceInferenceEmbeddings_0-output-huggingFaceInferenceEmbeddings-HuggingFaceInferenceEmbeddings|Embeddings",
            "name": "huggingFaceInferenceEmbeddings",
            "label": "HuggingFaceInferenceEmbeddings",
            "type": "HuggingFaceInferenceEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "positionAbsolute": {
        "x": -1578.455844445211,
        "y": 782.0927239664345
      },
      "dragging": false
    },
    {
      "width": 300,
      "height": 470,
      "id": "AWSBedrockEmbeddings_0",
      "position": {
        "x": -1570.9668367262125,
        "y": 1317.5558776156338
      },
      "type": "customNode",
      "data": {
        "id": "AWSBedrockEmbeddings_0",
        "label": "AWS Bedrock Embeddings",
        "version": 1,
        "name": "AWSBedrockEmbeddings",
        "type": "AWSBedrockEmbeddings",
        "baseClasses": [
          "AWSBedrockEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "AWSBedrock embedding models to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "AWS Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "awsApi"
            ],
            "optional": true,
            "id": "AWSBedrockEmbeddings_0-input-credential-credential"
          },
          {
            "label": "Region",
            "name": "region",
            "type": "options",
            "options": [
              {
                "label": "af-south-1",
                "name": "af-south-1"
              },
              {
                "label": "ap-east-1",
                "name": "ap-east-1"
              },
              {
                "label": "ap-northeast-1",
                "name": "ap-northeast-1"
              },
              {
                "label": "ap-northeast-2",
                "name": "ap-northeast-2"
              },
              {
                "label": "ap-northeast-3",
                "name": "ap-northeast-3"
              },
              {
                "label": "ap-south-1",
                "name": "ap-south-1"
              },
              {
                "label": "ap-south-2",
                "name": "ap-south-2"
              },
              {
                "label": "ap-southeast-1",
                "name": "ap-southeast-1"
              },
              {
                "label": "ap-southeast-2",
                "name": "ap-southeast-2"
              },
              {
                "label": "ap-southeast-3",
                "name": "ap-southeast-3"
              },
              {
                "label": "ap-southeast-4",
                "name": "ap-southeast-4"
              },
              {
                "label": "ap-southeast-5",
                "name": "ap-southeast-5"
              },
              {
                "label": "ap-southeast-6",
                "name": "ap-southeast-6"
              },
              {
                "label": "ca-central-1",
                "name": "ca-central-1"
              },
              {
                "label": "ca-west-1",
                "name": "ca-west-1"
              },
              {
                "label": "cn-north-1",
                "name": "cn-north-1"
              },
              {
                "label": "cn-northwest-1",
                "name": "cn-northwest-1"
              },
              {
                "label": "eu-central-1",
                "name": "eu-central-1"
              },
              {
                "label": "eu-central-2",
                "name": "eu-central-2"
              },
              {
                "label": "eu-north-1",
                "name": "eu-north-1"
              },
              {
                "label": "eu-south-1",
                "name": "eu-south-1"
              },
              {
                "label": "eu-south-2",
                "name": "eu-south-2"
              },
              {
                "label": "eu-west-1",
                "name": "eu-west-1"
              },
              {
                "label": "eu-west-2",
                "name": "eu-west-2"
              },
              {
                "label": "eu-west-3",
                "name": "eu-west-3"
              },
              {
                "label": "il-central-1",
                "name": "il-central-1"
              },
              {
                "label": "me-central-1",
                "name": "me-central-1"
              },
              {
                "label": "me-south-1",
                "name": "me-south-1"
              },
              {
                "label": "sa-east-1",
                "name": "sa-east-1"
              },
              {
                "label": "us-east-1",
                "name": "us-east-1"
              },
              {
                "label": "us-east-2",
                "name": "us-east-2"
              },
              {
                "label": "us-gov-east-1",
                "name": "us-gov-east-1"
              },
              {
                "label": "us-gov-west-1",
                "name": "us-gov-west-1"
              },
              {
                "label": "us-west-1",
                "name": "us-west-1"
              },
              {
                "label": "us-west-2",
                "name": "us-west-2"
              }
            ],
            "default": "us-east-1",
            "id": "AWSBedrockEmbeddings_0-input-region-options"
          },
          {
            "label": "Model Name",
            "name": "model",
            "type": "options",
            "options": [
              {
                "label": "amazon.titan-embed-text-v1",
                "name": "amazon.titan-embed-text-v1"
              },
              {
                "label": "amazon.titan-embed-g1-text-02",
                "name": "amazon.titan-embed-g1-text-02"
              }
            ],
            "default": "amazon.titan-embed-text-v1",
            "id": "AWSBedrockEmbeddings_0-input-model-options"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "region": "us-east-1",
          "model": "amazon.titan-embed-text-v1"
        },
        "outputAnchors": [
          {
            "id": "AWSBedrockEmbeddings_0-output-AWSBedrockEmbeddings-AWSBedrockEmbeddings|Embeddings",
            "name": "AWSBedrockEmbeddings",
            "label": "AWSBedrockEmbeddings",
            "type": "AWSBedrockEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "selected": false,
      "positionAbsolute": {
        "x": -1570.9668367262125,
        "y": 1317.5558776156338
      },
      "dragging": false
    }
  ],
  "edges": [
    {
      "source": "awsChatBedrock_0",
      "sourceHandle": "awsChatBedrock_0-output-awsChatBedrock-AWSChatBedrock|SimpleChatModel|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "conversationalRetrievalQAChain_0",
      "targetHandle": "conversationalRetrievalQAChain_0-input-model-BaseLanguageModel",
      "type": "buttonedge",
      "id": "awsChatBedrock_0-awsChatBedrock_0-output-awsChatBedrock-AWSChatBedrock|SimpleChatModel|BaseChatModel|BaseLanguageModel|Runnable-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-model-BaseLanguageModel",
      "data": {
        "label": ""
      }
    },
    {
      "source": "pineconeExistingIndex_0",
      "sourceHandle": "pineconeExistingIndex_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
      "target": "conversationalRetrievalQAChain_0",
      "targetHandle": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
      "type": "buttonedge",
      "id": "pineconeExistingIndex_0-pineconeExistingIndex_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
      "data": {
        "label": ""
      }
    },
    {
      "source": "bufferWindowMemory_0",
      "sourceHandle": "bufferWindowMemory_0-output-bufferWindowMemory-BufferWindowMemory|BaseChatMemory|BaseMemory",
      "target": "conversationalRetrievalQAChain_0",
      "targetHandle": "conversationalRetrievalQAChain_0-input-memory-BaseMemory",
      "type": "buttonedge",
      "id": "bufferWindowMemory_0-bufferWindowMemory_0-output-bufferWindowMemory-BufferWindowMemory|BaseChatMemory|BaseMemory-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-memory-BaseMemory",
      "data": {
        "label": ""
      }
    },
    {
      "source": "huggingFaceInferenceEmbeddings_0",
      "sourceHandle": "huggingFaceInferenceEmbeddings_0-output-huggingFaceInferenceEmbeddings-HuggingFaceInferenceEmbeddings|Embeddings",
      "target": "pineconeExistingIndex_0",
      "targetHandle": "pineconeExistingIndex_0-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "huggingFaceInferenceEmbeddings_0-huggingFaceInferenceEmbeddings_0-output-huggingFaceInferenceEmbeddings-HuggingFaceInferenceEmbeddings|Embeddings-pineconeExistingIndex_0-pineconeExistingIndex_0-input-embeddings-Embeddings",
      "data": {
        "label": ""
      }
    }
  ]
}